/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mongoDB.model.Keys;
import mongoDB.model.Transaction;
import mongoDB.model.tables.records.UserloansRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userloans extends TableImpl<UserloansRecord> {

    private static final long serialVersionUID = -1284046590;

    /**
     * The reference instance of <code>transaction.userLoans</code>
     */
    public static final Userloans USERLOANS = new Userloans();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserloansRecord> getRecordType() {
        return UserloansRecord.class;
    }

    /**
     * The column <code>transaction.userLoans.id</code>.
     */
    public final TableField<UserloansRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>transaction.userLoans.displayLoans</code>.
     */
    public final TableField<UserloansRecord, String> DISPLAYLOANS = createField("displayLoans", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.userLoans.cif</code>.
     */
    public final TableField<UserloansRecord, String> CIF = createField("cif", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.userLoans.productId</code>.
     */
    public final TableField<UserloansRecord, Integer> PRODUCTID = createField("productId", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.userLoans.productTypeId</code>.
     */
    public final TableField<UserloansRecord, Integer> PRODUCTTYPEID = createField("productTypeId", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.userLoans.loans</code>.
     */
    public final TableField<UserloansRecord, Long> LOANS = createField("loans", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>transaction.userLoans.period</code>.
     */
    public final TableField<UserloansRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.userLoans.currency</code>.
     */
    public final TableField<UserloansRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>transaction.userLoans.inRate</code>.
     */
    public final TableField<UserloansRecord, Double> INRATE = createField("inRate", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>transaction.userLoans.description</code>.
     */
    public final TableField<UserloansRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.userLoans.adminApprove</code>.
     */
    public final TableField<UserloansRecord, String> ADMINAPPROVE = createField("adminApprove", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.userLoans.timeApprove</code>.
     */
    public final TableField<UserloansRecord, Long> TIMEAPPROVE = createField("timeApprove", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>transaction.userLoans.status</code>.
     */
    public final TableField<UserloansRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.userLoans.causeDenied</code>.
     */
    public final TableField<UserloansRecord, String> CAUSEDENIED = createField("causeDenied", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>transaction.userLoans.planPaying</code>.
     */
    public final TableField<UserloansRecord, String> PLANPAYING = createField("planPaying", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>transaction.userLoans.billID</code>.
     */
    public final TableField<UserloansRecord, String> BILLID = createField("billID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.userLoans.loanRefno</code>.
     */
    public final TableField<UserloansRecord, String> LOANREFNO = createField("loanRefno", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.userLoans.createdAt</code>.
     */
    public final TableField<UserloansRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>transaction.userLoans.modifiedAt</code>.
     */
    public final TableField<UserloansRecord, Timestamp> MODIFIEDAT = createField("modifiedAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>transaction.userLoans</code> table reference
     */
    public Userloans() {
        this("userLoans", null);
    }

    /**
     * Create an aliased <code>transaction.userLoans</code> table reference
     */
    public Userloans(String alias) {
        this(alias, USERLOANS);
    }

    private Userloans(String alias, Table<UserloansRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userloans(String alias, Table<UserloansRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserloansRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USERLOANS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserloansRecord> getPrimaryKey() {
        return Keys.KEY_USERLOANS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserloansRecord>> getKeys() {
        return Arrays.<UniqueKey<UserloansRecord>>asList(Keys.KEY_USERLOANS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userloans as(String alias) {
        return new Userloans(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userloans rename(String name) {
        return new Userloans(name, null);
    }
}
