/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mongoDB.model.Keys;
import mongoDB.model.Transaction;
import mongoDB.model.tables.records.TimelineRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Timeline extends TableImpl<TimelineRecord> {

    private static final long serialVersionUID = 428468768;

    /**
     * The reference instance of <code>transaction.timeLine</code>
     */
    public static final Timeline TIMELINE = new Timeline();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimelineRecord> getRecordType() {
        return TimelineRecord.class;
    }

    /**
     * The column <code>transaction.timeLine.id</code>.
     */
    public final TableField<TimelineRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>transaction.timeLine.transactionNumber</code>.
     */
    public final TableField<TimelineRecord, String> TRANSACTIONNUMBER = createField("transactionNumber", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.rawTransactionType</code>.
     */
    public final TableField<TimelineRecord, String> RAWTRANSACTIONTYPE = createField("rawTransactionType", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>transaction.timeLine.refKey</code>.
     */
    public final TableField<TimelineRecord, String> REFKEY = createField("refKey", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.transactionType</code>.
     */
    public final TableField<TimelineRecord, String> TRANSACTIONTYPE = createField("transactionType", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>transaction.timeLine.createDate</code>.
     */
    public final TableField<TimelineRecord, Long> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>transaction.timeLine.createTime</code>.
     */
    public final TableField<TimelineRecord, Long> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>transaction.timeLine.status</code>.
     */
    public final TableField<TimelineRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.timeLine.prstatus</code>.
     */
    public final TableField<TimelineRecord, Integer> PRSTATUS = createField("prstatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.timeLine.description</code>.
     */
    public final TableField<TimelineRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>transaction.timeLine.amount</code>.
     */
    public final TableField<TimelineRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(20, 2), this, "");

    /**
     * The column <code>transaction.timeLine.feeAmount</code>.
     */
    public final TableField<TimelineRecord, BigDecimal> FEEAMOUNT = createField("feeAmount", org.jooq.impl.SQLDataType.DECIMAL.precision(20, 2), this, "");

    /**
     * The column <code>transaction.timeLine.topupNumber</code>.
     */
    public final TableField<TimelineRecord, String> TOPUPNUMBER = createField("topupNumber", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.billNumber</code>.
     */
    public final TableField<TimelineRecord, String> BILLNUMBER = createField("billNumber", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.currency</code>.
     */
    public final TableField<TimelineRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>transaction.timeLine.sourceCIF</code>.
     */
    public final TableField<TimelineRecord, String> SOURCECIF = createField("sourceCIF", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.sourceName</code>.
     */
    public final TableField<TimelineRecord, String> SOURCENAME = createField("sourceName", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.refSourceAccountNumber</code>.
     */
    public final TableField<TimelineRecord, String> REFSOURCEACCOUNTNUMBER = createField("refSourceAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.sourceAccountNumber</code>.
     */
    public final TableField<TimelineRecord, String> SOURCEACCOUNTNUMBER = createField("sourceAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.sourceCardNumber</code>.
     */
    public final TableField<TimelineRecord, String> SOURCECARDNUMBER = createField("sourceCardNumber", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.destinationCIF</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONCIF = createField("destinationCIF", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.destinationName</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONNAME = createField("destinationName", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.destinationAccountNumber</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONACCOUNTNUMBER = createField("destinationAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.refDestinationAccountNumber</code>.
     */
    public final TableField<TimelineRecord, String> REFDESTINATIONACCOUNTNUMBER = createField("refDestinationAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.destinationCardNumber</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONCARDNUMBER = createField("destinationCardNumber", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.destinationBranch</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONBRANCH = createField("destinationBranch", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>transaction.timeLine.destinationBank</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONBANK = createField("destinationBank", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>transaction.timeLine.destinationCity</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONCITY = createField("destinationCity", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>transaction.timeLine.refTransactionID</code>.
     */
    public final TableField<TimelineRecord, String> REFTRANSACTIONID = createField("refTransactionID", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.preserve01</code>.
     */
    public final TableField<TimelineRecord, String> PRESERVE01 = createField("preserve01", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.preserve02</code>.
     */
    public final TableField<TimelineRecord, String> PRESERVE02 = createField("preserve02", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.preserve03</code>.
     */
    public final TableField<TimelineRecord, String> PRESERVE03 = createField("preserve03", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>transaction.timeLine.transactionBillType</code>.
     */
    public final TableField<TimelineRecord, Integer> TRANSACTIONBILLTYPE = createField("transactionBillType", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.timeLine.transferMoneyType</code>.
     */
    public final TableField<TimelineRecord, Integer> TRANSFERMONEYTYPE = createField("transferMoneyType", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.timeLine.destinationBankName</code>.
     */
    public final TableField<TimelineRecord, String> DESTINATIONBANKNAME = createField("destinationBankName", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.ddTxnType</code>.
     */
    public final TableField<TimelineRecord, String> DDTXNTYPE = createField("ddTxnType", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>transaction.timeLine.typeDescription</code>.
     */
    public final TableField<TimelineRecord, String> TYPEDESCRIPTION = createField("typeDescription", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * Create a <code>transaction.timeLine</code> table reference
     */
    public Timeline() {
        this("timeLine", null);
    }

    /**
     * Create an aliased <code>transaction.timeLine</code> table reference
     */
    public Timeline(String alias) {
        this(alias, TIMELINE);
    }

    private Timeline(String alias, Table<TimelineRecord> aliased) {
        this(alias, aliased, null);
    }

    private Timeline(String alias, Table<TimelineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TimelineRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TIMELINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TimelineRecord> getPrimaryKey() {
        return Keys.KEY_TIMELINE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TimelineRecord>> getKeys() {
        return Arrays.<UniqueKey<TimelineRecord>>asList(Keys.KEY_TIMELINE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timeline as(String alias) {
        return new Timeline(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Timeline rename(String name) {
        return new Timeline(name, null);
    }
}
