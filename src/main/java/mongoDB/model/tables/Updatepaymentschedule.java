/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mongoDB.model.Keys;
import mongoDB.model.Transaction;
import mongoDB.model.tables.records.UpdatepaymentscheduleRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Updatepaymentschedule extends TableImpl<UpdatepaymentscheduleRecord> {

    private static final long serialVersionUID = 120608874;

    /**
     * The reference instance of <code>transaction.updatePaymentSchedule</code>
     */
    public static final Updatepaymentschedule UPDATEPAYMENTSCHEDULE = new Updatepaymentschedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UpdatepaymentscheduleRecord> getRecordType() {
        return UpdatepaymentscheduleRecord.class;
    }

    /**
     * The column <code>transaction.updatePaymentSchedule.id</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.cif</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> CIF = createField("cif", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.refKey</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> REFKEY = createField("refKey", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.displayScheduleId</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> DISPLAYSCHEDULEID = createField("displayScheduleId", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.creditAccount</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> CREDITACCOUNT = createField("creditAccount", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.cardNumber</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> CARDNUMBER = createField("cardNumber", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.creditName</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> CREDITNAME = createField("creditName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.transactionAmount</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> TRANSACTIONAMOUNT = createField("transactionAmount", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.transactionCurrency</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> TRANSACTIONCURRENCY = createField("transactionCurrency", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.transactionDetail</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> TRANSACTIONDETAIL = createField("transactionDetail", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.chargeAccount</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> CHARGEACCOUNT = createField("chargeAccount", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.cityCode</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> CITYCODE = createField("cityCode", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.bankCode</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> BANKCODE = createField("bankCode", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.branchCode</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, String> BRANCHCODE = createField("branchCode", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.typeDescription</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, Integer> TYPEDESCRIPTION = createField("typeDescription", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.feeId</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, Integer> FEEID = createField("feeId", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.beginDate</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, Long> BEGINDATE = createField("beginDate", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.nextDate</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, Long> NEXTDATE = createField("nextDate", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>transaction.updatePaymentSchedule.autoRepeat</code>.
     */
    public final TableField<UpdatepaymentscheduleRecord, Integer> AUTOREPEAT = createField("autoRepeat", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>transaction.updatePaymentSchedule</code> table reference
     */
    public Updatepaymentschedule() {
        this("updatePaymentSchedule", null);
    }

    /**
     * Create an aliased <code>transaction.updatePaymentSchedule</code> table reference
     */
    public Updatepaymentschedule(String alias) {
        this(alias, UPDATEPAYMENTSCHEDULE);
    }

    private Updatepaymentschedule(String alias, Table<UpdatepaymentscheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Updatepaymentschedule(String alias, Table<UpdatepaymentscheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UpdatepaymentscheduleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_UPDATEPAYMENTSCHEDULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UpdatepaymentscheduleRecord> getPrimaryKey() {
        return Keys.KEY_UPDATEPAYMENTSCHEDULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UpdatepaymentscheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<UpdatepaymentscheduleRecord>>asList(Keys.KEY_UPDATEPAYMENTSCHEDULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Updatepaymentschedule as(String alias) {
        return new Updatepaymentschedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Updatepaymentschedule rename(String name) {
        return new Updatepaymentschedule(name, null);
    }
}
