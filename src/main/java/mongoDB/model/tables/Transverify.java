/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mongoDB.model.Keys;
import mongoDB.model.Transaction;
import mongoDB.model.tables.records.TransverifyRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transverify extends TableImpl<TransverifyRecord> {

    private static final long serialVersionUID = -1808627329;

    /**
     * The reference instance of <code>transaction.transVerify</code>
     */
    public static final Transverify TRANSVERIFY = new Transverify();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransverifyRecord> getRecordType() {
        return TransverifyRecord.class;
    }

    /**
     * The column <code>transaction.transVerify.transactionNumber</code>.
     */
    public final TableField<TransverifyRecord, String> TRANSACTIONNUMBER = createField("transactionNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>transaction.transVerify.refKey</code>.
     */
    public final TableField<TransverifyRecord, String> REFKEY = createField("refKey", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transVerify.verifyOTP</code>.
     */
    public final TableField<TransverifyRecord, Integer> VERIFYOTP = createField("verifyOTP", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>transaction.transVerify.verifyAccount</code>.
     */
    public final TableField<TransverifyRecord, Integer> VERIFYACCOUNT = createField("verifyAccount", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>transaction.transVerify.verifyUser</code>.
     */
    public final TableField<TransverifyRecord, Integer> VERIFYUSER = createField("verifyUser", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>transaction.transVerify.statusToFront</code>.
     */
    public final TableField<TransverifyRecord, Integer> STATUSTOFRONT = createField("statusToFront", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>transaction.transVerify.createdAt</code>.
     */
    public final TableField<TransverifyRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>transaction.transVerify.modifiedAt</code>.
     */
    public final TableField<TransverifyRecord, Timestamp> MODIFIEDAT = createField("modifiedAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>transaction.transVerify</code> table reference
     */
    public Transverify() {
        this("transVerify", null);
    }

    /**
     * Create an aliased <code>transaction.transVerify</code> table reference
     */
    public Transverify(String alias) {
        this(alias, TRANSVERIFY);
    }

    private Transverify(String alias, Table<TransverifyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Transverify(String alias, Table<TransverifyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransverifyRecord> getPrimaryKey() {
        return Keys.KEY_TRANSVERIFY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransverifyRecord>> getKeys() {
        return Arrays.<UniqueKey<TransverifyRecord>>asList(Keys.KEY_TRANSVERIFY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Transverify as(String alias) {
        return new Transverify(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Transverify rename(String name) {
        return new Transverify(name, null);
    }
}
