/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables.records;


import javax.annotation.Generated;

import mongoDB.model.tables.Loandescription;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoandescriptionRecord extends UpdatableRecordImpl<LoandescriptionRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 730127818;

    /**
     * Setter for <code>transaction.loanDescription.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>transaction.loanDescription.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>transaction.loanDescription.productId</code>.
     */
    public void setProductid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>transaction.loanDescription.productId</code>.
     */
    public Integer getProductid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>transaction.loanDescription.descriptionEn</code>.
     */
    public void setDescriptionen(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>transaction.loanDescription.descriptionEn</code>.
     */
    public String getDescriptionen() {
        return (String) get(2);
    }

    /**
     * Setter for <code>transaction.loanDescription.descriptionVn</code>.
     */
    public void setDescriptionvn(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>transaction.loanDescription.descriptionVn</code>.
     */
    public String getDescriptionvn() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Loandescription.LOANDESCRIPTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Loandescription.LOANDESCRIPTION.PRODUCTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Loandescription.LOANDESCRIPTION.DESCRIPTIONEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Loandescription.LOANDESCRIPTION.DESCRIPTIONVN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProductid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescriptionen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescriptionvn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoandescriptionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoandescriptionRecord value2(Integer value) {
        setProductid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoandescriptionRecord value3(String value) {
        setDescriptionen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoandescriptionRecord value4(String value) {
        setDescriptionvn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoandescriptionRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LoandescriptionRecord
     */
    public LoandescriptionRecord() {
        super(Loandescription.LOANDESCRIPTION);
    }

    /**
     * Create a detached, initialised LoandescriptionRecord
     */
    public LoandescriptionRecord(Integer id, Integer productid, String descriptionen, String descriptionvn) {
        super(Loandescription.LOANDESCRIPTION);

        set(0, id);
        set(1, productid);
        set(2, descriptionen);
        set(3, descriptionvn);
    }
}
