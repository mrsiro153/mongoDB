/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables.records;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import mongoDB.model.tables.Customertype;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomertypeRecord extends UpdatableRecordImpl<CustomertypeRecord> implements Record9<Integer, Integer, Date, Date, Date, Date, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1519427082;

    /**
     * Setter for <code>transaction.customerType.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>transaction.customerType.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>transaction.customerType.allUser</code>.
     */
    public void setAlluser(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>transaction.customerType.allUser</code>.
     */
    public Integer getAlluser() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>transaction.customerType.fromBirth</code>.
     */
    public void setFrombirth(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>transaction.customerType.fromBirth</code>.
     */
    public Date getFrombirth() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>transaction.customerType.toBirth</code>.
     */
    public void setTobirth(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>transaction.customerType.toBirth</code>.
     */
    public Date getTobirth() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>transaction.customerType.fromRegister</code>.
     */
    public void setFromregister(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>transaction.customerType.fromRegister</code>.
     */
    public Date getFromregister() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>transaction.customerType.toRegister</code>.
     */
    public void setToregister(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>transaction.customerType.toRegister</code>.
     */
    public Date getToregister() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>transaction.customerType.status</code>.
     */
    public void setStatus(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>transaction.customerType.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>transaction.customerType.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>transaction.customerType.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>transaction.customerType.modifiedAt</code>.
     */
    public void setModifiedat(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>transaction.customerType.modifiedAt</code>.
     */
    public Timestamp getModifiedat() {
        return (Timestamp) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Date, Date, Date, Date, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Date, Date, Date, Date, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Customertype.CUSTOMERTYPE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Customertype.CUSTOMERTYPE.ALLUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Customertype.CUSTOMERTYPE.FROMBIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Customertype.CUSTOMERTYPE.TOBIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Customertype.CUSTOMERTYPE.FROMREGISTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Customertype.CUSTOMERTYPE.TOREGISTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Customertype.CUSTOMERTYPE.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Customertype.CUSTOMERTYPE.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Customertype.CUSTOMERTYPE.MODIFIEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAlluser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getFrombirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getTobirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getFromregister();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getToregister();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getModifiedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value2(Integer value) {
        setAlluser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value3(Date value) {
        setFrombirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value4(Date value) {
        setTobirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value5(Date value) {
        setFromregister(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value6(Date value) {
        setToregister(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value7(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value8(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord value9(Timestamp value) {
        setModifiedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomertypeRecord values(Integer value1, Integer value2, Date value3, Date value4, Date value5, Date value6, Integer value7, Timestamp value8, Timestamp value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomertypeRecord
     */
    public CustomertypeRecord() {
        super(Customertype.CUSTOMERTYPE);
    }

    /**
     * Create a detached, initialised CustomertypeRecord
     */
    public CustomertypeRecord(Integer id, Integer alluser, Date frombirth, Date tobirth, Date fromregister, Date toregister, Integer status, Timestamp createdat, Timestamp modifiedat) {
        super(Customertype.CUSTOMERTYPE);

        set(0, id);
        set(1, alluser);
        set(2, frombirth);
        set(3, tobirth);
        set(4, fromregister);
        set(5, toregister);
        set(6, status);
        set(7, createdat);
        set(8, modifiedat);
    }
}
