/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables.records;


import javax.annotation.Generated;

import mongoDB.model.tables.Bankcode;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankcodeRecord extends UpdatableRecordImpl<BankcodeRecord> implements Record6<String, String, String, String, Integer, Byte> {

    private static final long serialVersionUID = -1403870190;

    /**
     * Setter for <code>transaction.bankCode.bankCode</code>.
     */
    public void setBankcode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>transaction.bankCode.bankCode</code>.
     */
    public String getBankcode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>transaction.bankCode.bankName</code>.
     */
    public void setBankname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>transaction.bankCode.bankName</code>.
     */
    public String getBankname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>transaction.bankCode.shortName</code>.
     */
    public void setShortname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>transaction.bankCode.shortName</code>.
     */
    public String getShortname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>transaction.bankCode.keyWord</code>.
     */
    public void setKeyword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>transaction.bankCode.keyWord</code>.
     */
    public String getKeyword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>transaction.bankCode.shortNo</code>.
     */
    public void setShortno(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>transaction.bankCode.shortNo</code>.
     */
    public Integer getShortno() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>transaction.bankCode.suggestion</code>.
     */
    public void setSuggestion(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>transaction.bankCode.suggestion</code>.
     */
    public Byte getSuggestion() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, Integer, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, Integer, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Bankcode.BANKCODE.BANKCODE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Bankcode.BANKCODE.BANKNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Bankcode.BANKCODE.SHORTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Bankcode.BANKCODE.KEYWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Bankcode.BANKCODE.SHORTNO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return Bankcode.BANKCODE.SUGGESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getBankcode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBankname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getShortname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getKeyword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getShortno();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getSuggestion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord value1(String value) {
        setBankcode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord value2(String value) {
        setBankname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord value3(String value) {
        setShortname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord value4(String value) {
        setKeyword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord value5(Integer value) {
        setShortno(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord value6(Byte value) {
        setSuggestion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankcodeRecord values(String value1, String value2, String value3, String value4, Integer value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankcodeRecord
     */
    public BankcodeRecord() {
        super(Bankcode.BANKCODE);
    }

    /**
     * Create a detached, initialised BankcodeRecord
     */
    public BankcodeRecord(String bankcode, String bankname, String shortname, String keyword, Integer shortno, Byte suggestion) {
        super(Bankcode.BANKCODE);

        set(0, bankcode);
        set(1, bankname);
        set(2, shortname);
        set(3, keyword);
        set(4, shortno);
        set(5, suggestion);
    }
}
