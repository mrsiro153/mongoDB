/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables.records;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import mongoDB.model.tables.Ddtransaction;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DdtransactionRecord extends UpdatableRecordImpl<DdtransactionRecord> implements Record9<String, String, BigDecimal, String, Date, Integer, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1744503563;

    /**
     * Setter for <code>transaction.ddTransaction.transactionNumber</code>.
     */
    public void setTransactionnumber(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.transactionNumber</code>.
     */
    public String getTransactionnumber() {
        return (String) get(0);
    }

    /**
     * Setter for <code>transaction.ddTransaction.accountNumber</code>.
     */
    public void setAccountnumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.accountNumber</code>.
     */
    public String getAccountnumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>transaction.ddTransaction.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>transaction.ddTransaction.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>transaction.ddTransaction.createdDate</code>.
     */
    public void setCreateddate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.createdDate</code>.
     */
    public Date getCreateddate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>transaction.ddTransaction.status</code>.
     */
    public void setStatus(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>transaction.ddTransaction.isDelete</code>.
     */
    public void setIsdelete(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.isDelete</code>.
     */
    public Byte getIsdelete() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>transaction.ddTransaction.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>transaction.ddTransaction.modifiedAt</code>.
     */
    public void setModifiedat(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>transaction.ddTransaction.modifiedAt</code>.
     */
    public Timestamp getModifiedat() {
        return (Timestamp) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, BigDecimal, String, Date, Integer, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, BigDecimal, String, Date, Integer, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Ddtransaction.DDTRANSACTION.TRANSACTIONNUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Ddtransaction.DDTRANSACTION.ACCOUNTNUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Ddtransaction.DDTRANSACTION.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Ddtransaction.DDTRANSACTION.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Ddtransaction.DDTRANSACTION.CREATEDDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Ddtransaction.DDTRANSACTION.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return Ddtransaction.DDTRANSACTION.ISDELETE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Ddtransaction.DDTRANSACTION.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Ddtransaction.DDTRANSACTION.MODIFIEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTransactionnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccountnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getCreateddate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getIsdelete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getModifiedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value1(String value) {
        setTransactionnumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value2(String value) {
        setAccountnumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value5(Date value) {
        setCreateddate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value6(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value7(Byte value) {
        setIsdelete(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value8(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord value9(Timestamp value) {
        setModifiedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DdtransactionRecord values(String value1, String value2, BigDecimal value3, String value4, Date value5, Integer value6, Byte value7, Timestamp value8, Timestamp value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DdtransactionRecord
     */
    public DdtransactionRecord() {
        super(Ddtransaction.DDTRANSACTION);
    }

    /**
     * Create a detached, initialised DdtransactionRecord
     */
    public DdtransactionRecord(String transactionnumber, String accountnumber, BigDecimal amount, String type, Date createddate, Integer status, Byte isdelete, Timestamp createdat, Timestamp modifiedat) {
        super(Ddtransaction.DDTRANSACTION);

        set(0, transactionnumber);
        set(1, accountnumber);
        set(2, amount);
        set(3, type);
        set(4, createddate);
        set(5, status);
        set(6, isdelete);
        set(7, createdat);
        set(8, modifiedat);
    }
}
