/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables.records;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import mongoDB.model.tables.Fdtrans;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdtransRecord extends UpdatableRecordImpl<FdtransRecord> implements Record8<String, String, BigDecimal, String, Date, Timestamp, Timestamp, Integer> {

    private static final long serialVersionUID = -354158441;

    /**
     * Setter for <code>transaction.fdTrans.fdTransId</code>.
     */
    public void setFdtransid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.fdTransId</code>.
     */
    public String getFdtransid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>transaction.fdTrans.fdAccountNumber</code>.
     */
    public void setFdaccountnumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.fdAccountNumber</code>.
     */
    public String getFdaccountnumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>transaction.fdTrans.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>transaction.fdTrans.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>transaction.fdTrans.createDate</code>.
     */
    public void setCreatedate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.createDate</code>.
     */
    public Date getCreatedate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>transaction.fdTrans.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>transaction.fdTrans.modifyAt</code>.
     */
    public void setModifyat(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.modifyAt</code>.
     */
    public Timestamp getModifyat() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>transaction.fdTrans.status</code>.
     */
    public void setStatus(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>transaction.fdTrans.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, BigDecimal, String, Date, Timestamp, Timestamp, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, BigDecimal, String, Date, Timestamp, Timestamp, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Fdtrans.FDTRANS.FDTRANSID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Fdtrans.FDTRANS.FDACCOUNTNUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Fdtrans.FDTRANS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Fdtrans.FDTRANS.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Fdtrans.FDTRANS.CREATEDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Fdtrans.FDTRANS.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Fdtrans.FDTRANS.MODIFYAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Fdtrans.FDTRANS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getFdtransid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFdaccountnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getModifyat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value1(String value) {
        setFdtransid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value2(String value) {
        setFdaccountnumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value5(Date value) {
        setCreatedate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value6(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value7(Timestamp value) {
        setModifyat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord value8(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdtransRecord values(String value1, String value2, BigDecimal value3, String value4, Date value5, Timestamp value6, Timestamp value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FdtransRecord
     */
    public FdtransRecord() {
        super(Fdtrans.FDTRANS);
    }

    /**
     * Create a detached, initialised FdtransRecord
     */
    public FdtransRecord(String fdtransid, String fdaccountnumber, BigDecimal amount, String type, Date createdate, Timestamp createdat, Timestamp modifyat, Integer status) {
        super(Fdtrans.FDTRANS);

        set(0, fdtransid);
        set(1, fdaccountnumber);
        set(2, amount);
        set(3, type);
        set(4, createdate);
        set(5, createdat);
        set(6, modifyat);
        set(7, status);
    }
}
