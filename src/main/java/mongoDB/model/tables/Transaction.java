/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mongoDB.model.Keys;
import mongoDB.model.tables.records.TransactionRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transaction extends TableImpl<TransactionRecord> {

    private static final long serialVersionUID = 1658390962;

    /**
     * The reference instance of <code>transaction.transaction</code>
     */
    public static final Transaction TRANSACTION_ = new Transaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransactionRecord> getRecordType() {
        return TransactionRecord.class;
    }

    /**
     * The column <code>transaction.transaction.id</code>.
     */
    public final TableField<TransactionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.transactionNumber</code>.
     */
    public final TableField<TransactionRecord, String> TRANSACTIONNUMBER = createField("transactionNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.displayTransaction</code>.
     */
    public final TableField<TransactionRecord, String> DISPLAYTRANSACTION = createField("displayTransaction", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.transactionType</code>.
     */
    public final TableField<TransactionRecord, String> TRANSACTIONTYPE = createField("transactionType", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.refKey</code>.
     */
    public final TableField<TransactionRecord, String> REFKEY = createField("refKey", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.createDate</code>.
     */
    public final TableField<TransactionRecord, Date> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.createTime</code>.
     */
    public final TableField<TransactionRecord, Long> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.status</code>.
     */
    public final TableField<TransactionRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.prstatus</code>.
     */
    public final TableField<TransactionRecord, Integer> PRSTATUS = createField("prstatus", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.transaction.description</code>.
     */
    public final TableField<TransactionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.typeDescription</code>.
     */
    public final TableField<TransactionRecord, Integer> TYPEDESCRIPTION = createField("typeDescription", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.transaction.amount</code>.
     */
    public final TableField<TransactionRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(20, 2).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.feeAmount</code>.
     */
    public final TableField<TransactionRecord, BigDecimal> FEEAMOUNT = createField("feeAmount", org.jooq.impl.SQLDataType.DECIMAL.precision(20, 2).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.topupNumber</code>.
     */
    public final TableField<TransactionRecord, String> TOPUPNUMBER = createField("topupNumber", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

    /**
     * The column <code>transaction.transaction.billNumber</code>.
     */
    public final TableField<TransactionRecord, String> BILLNUMBER = createField("billNumber", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

    /**
     * The column <code>transaction.transaction.currency</code>.
     */
    public final TableField<TransactionRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.refSourceCIF</code>.
     */
    public final TableField<TransactionRecord, String> REFSOURCECIF = createField("refSourceCIF", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.sourceCIF</code>.
     */
    public final TableField<TransactionRecord, String> SOURCECIF = createField("sourceCIF", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.sourceName</code>.
     */
    public final TableField<TransactionRecord, String> SOURCENAME = createField("sourceName", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.refSourceAccountNumber</code>.
     */
    public final TableField<TransactionRecord, String> REFSOURCEACCOUNTNUMBER = createField("refSourceAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.sourceAccountNumber</code>.
     */
    public final TableField<TransactionRecord, String> SOURCEACCOUNTNUMBER = createField("sourceAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.sourceCardNumber</code>.
     */
    public final TableField<TransactionRecord, String> SOURCECARDNUMBER = createField("sourceCardNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.refDestinationCIF</code>.
     */
    public final TableField<TransactionRecord, String> REFDESTINATIONCIF = createField("refDestinationCIF", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.destinationCIF</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONCIF = createField("destinationCIF", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.destinationName</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONNAME = createField("destinationName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.destinationInputName</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONINPUTNAME = createField("destinationInputName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>transaction.transaction.refDestinationAccountNumber</code>.
     */
    public final TableField<TransactionRecord, String> REFDESTINATIONACCOUNTNUMBER = createField("refDestinationAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.displayDestinationAccountNumber</code>.
     */
    public final TableField<TransactionRecord, String> DISPLAYDESTINATIONACCOUNTNUMBER = createField("displayDestinationAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.destinationAccountNumber</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONACCOUNTNUMBER = createField("destinationAccountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.destinationCardNumber</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONCARDNUMBER = createField("destinationCardNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.destinationBranch</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONBRANCH = createField("destinationBranch", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.destinationBank</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONBANK = createField("destinationBank", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.destinationCity</code>.
     */
    public final TableField<TransactionRecord, String> DESTINATIONCITY = createField("destinationCity", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.refTransactionID</code>.
     */
    public final TableField<TransactionRecord, String> REFTRANSACTIONID = createField("refTransactionID", org.jooq.impl.SQLDataType.VARCHAR.length(63), this, "");

    /**
     * The column <code>transaction.transaction.response</code>.
     */
    public final TableField<TransactionRecord, String> RESPONSE = createField("response", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>transaction.transaction.createdAt</code>.
     */
    public final TableField<TransactionRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.modifiedAt</code>.
     */
    public final TableField<TransactionRecord, Timestamp> MODIFIEDAT = createField("modifiedAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>transaction.transaction.preserve01</code>.
     */
    public final TableField<TransactionRecord, String> PRESERVE01 = createField("preserve01", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>transaction.transaction.preserve02</code>.
     */
    public final TableField<TransactionRecord, String> PRESERVE02 = createField("preserve02", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>transaction.transaction.preserve03</code>.
     */
    public final TableField<TransactionRecord, String> PRESERVE03 = createField("preserve03", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>transaction.transaction.collationID</code>.
     */
    public final TableField<TransactionRecord, String> COLLATIONID = createField("collationID", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

    /**
     * The column <code>transaction.transaction.collationGroup</code>.
     */
    public final TableField<TransactionRecord, String> COLLATIONGROUP = createField("collationGroup", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "");

    /**
     * The column <code>transaction.transaction.transactionBillType</code>.
     */
    public final TableField<TransactionRecord, Integer> TRANSACTIONBILLTYPE = createField("transactionBillType", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>transaction.transaction.transferMoneyType</code>.
     */
    public final TableField<TransactionRecord, Integer> TRANSFERMONEYTYPE = createField("transferMoneyType", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>transaction.transaction</code> table reference
     */
    public Transaction() {
        this("transaction", null);
    }

    /**
     * Create an aliased <code>transaction.transaction</code> table reference
     */
    public Transaction(String alias) {
        this(alias, TRANSACTION_);
    }

    private Transaction(String alias, Table<TransactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Transaction(String alias, Table<TransactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return mongoDB.model.Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TransactionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRANSACTION_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransactionRecord> getPrimaryKey() {
        return Keys.KEY_TRANSACTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransactionRecord>> getKeys() {
        return Arrays.<UniqueKey<TransactionRecord>>asList(Keys.KEY_TRANSACTION_ID, Keys.KEY_TRANSACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Transaction as(String alias) {
        return new Transaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Transaction rename(String name) {
        return new Transaction(name, null);
    }
}
