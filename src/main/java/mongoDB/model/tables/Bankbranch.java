/*
 * This file is generated by jOOQ.
*/
package mongoDB.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mongoDB.model.Keys;
import mongoDB.model.Transaction;
import mongoDB.model.tables.records.BankbranchRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bankbranch extends TableImpl<BankbranchRecord> {

    private static final long serialVersionUID = 1974970540;

    /**
     * The reference instance of <code>transaction.bankBranch</code>
     */
    public static final Bankbranch BANKBRANCH = new Bankbranch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BankbranchRecord> getRecordType() {
        return BankbranchRecord.class;
    }

    /**
     * The column <code>transaction.bankBranch.branchID</code>.
     */
    public final TableField<BankbranchRecord, String> BRANCHID = createField("branchID", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>transaction.bankBranch.branchName</code>.
     */
    public final TableField<BankbranchRecord, String> BRANCHNAME = createField("branchName", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

    /**
     * The column <code>transaction.bankBranch.cityCode</code>.
     */
    public final TableField<BankbranchRecord, String> CITYCODE = createField("cityCode", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>transaction.bankBranch.bankCode</code>.
     */
    public final TableField<BankbranchRecord, String> BANKCODE = createField("bankCode", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>transaction.bankBranch.branchCode</code>.
     */
    public final TableField<BankbranchRecord, String> BRANCHCODE = createField("branchCode", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * Create a <code>transaction.bankBranch</code> table reference
     */
    public Bankbranch() {
        this("bankBranch", null);
    }

    /**
     * Create an aliased <code>transaction.bankBranch</code> table reference
     */
    public Bankbranch(String alias) {
        this(alias, BANKBRANCH);
    }

    private Bankbranch(String alias, Table<BankbranchRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bankbranch(String alias, Table<BankbranchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BankbranchRecord> getPrimaryKey() {
        return Keys.KEY_BANKBRANCH_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BankbranchRecord>> getKeys() {
        return Arrays.<UniqueKey<BankbranchRecord>>asList(Keys.KEY_BANKBRANCH_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bankbranch as(String alias) {
        return new Bankbranch(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bankbranch rename(String name) {
        return new Bankbranch(name, null);
    }
}
